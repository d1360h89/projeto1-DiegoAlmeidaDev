Claro! Vou te mostrar alguns dos comandos principais do Git e como visualizar o hist√≥rico de commits. üòä

1. **Visualizando o hist√≥rico de commits:**

Git reflog
   Depois de criar v√°rios commits ou clonar um reposit√≥rio com hist√≥rico pr√©-existente, voc√™ provavelmente vai querer olhar para tr√°s e ver o que aconteceu. A ferramenta mais b√°sica e poderosa para isso √© o comando `git log`. Por padr√£o, ele lista os commits em ordem cronol√≥gica inversa (o mais recente primeiro). Cada commit exibe seu checksum SHA-1, nome e email do autor, data de inser√ß√£o e mensagem do commit. Veja um exemplo:

   ```
   $ git log
   commit ca82a6dff817ec66f44342007202690a93763949
   Author: Scott Chacon <schacon@gee-mail.com>
   Date: Mon Mar 17 21:52:11 2008 -0700
   changed the version number

   commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7
   Author: Scott Chacon <schacon@gee-mail.com>
   Date: Sat Mar 15 16:40:33 2008 -0700
   removed unnecessary test
   ```

   Voc√™ pode usar op√ß√µes adicionais para personalizar a sa√≠da, como `-p` para mostrar as diferen√ßas introduzidas em cada commit ou `-2` para listar apenas os dois √∫ltimos commits.

2. **Outros comandos essenciais:**
   - `git reset`: Reverte para um estado anterior do reposit√≥rio.
   - `git tag`: Cria uma marca permanente no hist√≥rico.
   - `git rebase`: Reordena os commits no hist√≥rico.


nova branch
Git pull na master
Git checkout -b sistem-de-login master (cria a branch baseada na master)


Claro! Vou te mostrar como iniciar o Git e configur√°-lo. üòä

1. **Instala√ß√£o do Git:**
   Antes de come√ßar, voc√™ precisa instalar o Git no seu sistema. Existem v√°rias maneiras de fazer isso, dependendo do seu sistema operacional:
   - **Windows:** Voc√™ pode baixar o instalador do Git para Windows [aqui](https://gitforwindows.org/). Execute o instalador e siga as instru√ß√µes.
   - **Linux (Ubuntu/Debian):** Abra o terminal e digite `sudo apt install git`.
   - **Mac:** O Git j√° est√° instalado por padr√£o no macOS.

2. **Configura√ß√£o Inicial:**
   Ap√≥s a instala√ß√£o, √© importante configurar algumas informa√ß√µes pessoais no Git:

   - **Nome de Usu√°rio:**
     Defina seu nome de usu√°rio globalmente para todos os projetos:
     ```
     $ git config --global user.name "Seu Nome"
     ```

   - **Endere√ßo de Email:**
     Defina seu endere√ßo de email globalmente:
     ```
     $ git config --global user.email "seu@email.com"
     ```

   Essas configura√ß√µes s√£o importantes porque cada commit que voc√™ fizer usar√° essas informa√ß√µes.

3. **Escolhendo um Editor de Texto:**
   O Git pode usar um editor de texto para inserir mensagens de commit. Por padr√£o, ele usa o Vim. Se voc√™ preferir outro editor (como o Nano ou o Emacs), configure-o assim:
   ```
   $ git config --global core.editor "nome_do_editor"
   ```

Agora voc√™ est√° pronto para come√ßar a usar o Git! Se tiver mais alguma d√∫vida, √© s√≥ perguntar. üòâ


